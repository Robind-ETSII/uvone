<?xml version="1.0" encoding="utf-8"?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from /home/robot/robot_ws/src/uvone/uvone_description/robots/uvone.urdf.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="uvone">
  <link name="base_footprint"/>
  <!--
       Base link is set at the bottom of the base mould.
       This is done to be compatible with the way base link
       was configured for turtlebot 1. Refer to

       https://github.com/turtlebot/turtlebot/issues/40

       To put the base link at the more oft used wheel
       axis, set the z-distance from the base_footprint
       to 0.352.
      -->
  <joint name="base_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0.0102"/>
    <parent link="base_footprint"/>
    <child link="base_link"/>
  </joint>
  <link name="base_link">
    <visual>
      <geometry>
        <!-- new mesh -->
        <mesh filename="package://kobuki_description/meshes/main_body.dae"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0.001 0 0.05199"/>
    </visual>
    <collision name="base">
      <geometry>
        <cylinder length="0.10938" radius="0.178"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0.0 0 0.05949"/>
    </collision>
    <inertial>
      <!-- COM experimentally determined -->
      <origin xyz="0.01 0 0"/>
      <mass value="2.4"/>
      <!-- 2.4/2.6 kg for small/big battery pack -->
      <!-- Kobuki's inertia tensor is approximated by a cylinder with homogeneous mass distribution
             More details: http://en.wikipedia.org/wiki/List_of_moment_of_inertia_tensors
             m = 2.4 kg; h = 0.09 m; r = 0.175 m
             ixx = 1/12 * m * (3 * r^2 + h^2)
             iyy = 1/12 * m * (3 * r^2 + h^2)
             izz = 1/2 * m * r^2
          -->
      <inertia ixx="0.019995" ixy="0.0" ixz="
  0.0" iyy="0.019995" iyz="0.0" izz="0.03675"/>
    </inertial>
  </link>
  <joint name="wheel_left_joint" type="continuous">
    <parent link="base_link" />
    <child link="wheel_left_link"/>
    <origin rpy="-1.57079632679 0 0" xyz="0.00 0.115 0.0250"/>
    <axis xyz="0 0 1"/>
  </joint>
  <link name="
  wheel_left_link">
    <visual>
      <geometry>
        <mesh filename="package://kobuki_description/meshes/wheel.dae" />
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.0206" radius="
  0.0352"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
    <inertial>
      <mass value="0.01"/>
      <origin xyz="
  0 0 0"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="
  0.0" izz="0.001"/>
    </inertial>
  </link>
  <joint name="wheel_right_joint" type="continuous">
    <parent link="base_link"/>
    <child link="wheel_right_link"  />
    <origin rpy="-1.57079632679 0 0" xyz="0.00 -0.115 0.0250"/>
    <axis xyz="0 0 1"/>
  </joint>
  <link name="wheel_right_link">
    <visual>
      <geometry>
        <mesh filename="package://kobuki_description/meshes/wheel.dae"  />
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.0206" radius="
  0.0350"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
    <inertial>
      <mass value="0.01"/>
      <origin xyz="
  0 0 0"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="
  0.0" izz="0.001"/>
    </inertial>
  </link>
  <joint name="caster_front_joint" type="fixed">
    <parent link="base_link"/>
    <child link="caster_front_link"  />
    <origin rpy="-1.57079632679 0 0" xyz="0.115 0.0 0.007"/>
  </joint>
  <link name="caster_front_link">
    <collision>
      <geometry>
        <cylinder length="0.0176" radius="0.017"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
    <inertial>
      <mass value="
  0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
  </link>
  <joint name="caster_back_joint" type="fixed">
    <parent link="base_link"  />
    <child link="caster_back_link"/>
    <origin rpy="-1.57079632679 0 0" xyz="-0.135 0.0 0.009"/>
  </joint>
  <link name="caster_back_link">
    <collision>
      <geometry>
        <cylinder length="0.0176" radius="
  0.017"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="
  0.001"/>
    </inertial>
  </link>
  <!-- Kobuki's sensors -->
  <joint name="
  gyro_joint" type="fixed">
    <axis xyz="0 1 0"/>
    <origin rpy="0 0 0" xyz="0.056 0.062 0.0202"/>
    <parent link="base_link"/>
    <child link="
  gyro_link"/>
  </joint>
  <link name="gyro_link">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.000001" iyz="0" izz="0.0001"/>
    </inertial>
  </link>
  <joint name="cliff_sensor_left_joint" type="fixed"  >
    <origin rpy="0 1.57079632679 0" xyz="0.08734 0.13601 0.0214"/>
    <parent link="base_link"/>
    <child link="cliff_sensor_left_link"/>
  </joint>
  <link name="cliff_sensor_left_link">
    <inertial>
      <mass value="
  0.0001"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="
  0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/>
    </inertial>
  </link>
  <joint name="cliff_sensor_right_joint" type="fixed">
    <origin rpy="0 1.57079632679 0" xyz="0.085 -0.13601 0.0214"/>
    <parent link="
  base_link"/>
    <child link="cliff_sensor_right_link"/>
  </joint>
  <link name="cliff_sensor_right_link">
    <inertial>
      <mass value="0.0001"  />
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="0.0" ixz="
  0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/>
    </inertial>
  </link>
  <joint name="cliff_sensor_front_joint" type="fixed">
    <origin rpy="
  0 1.57079632679 0" xyz="0.156 0.00 0.0214"/>
    <parent link="base_link"  />
    <child link="cliff_sensor_front_link"/>
  </joint>
  <link name="cliff_sensor_front_link"  >
    <inertial>
      <mass value="0.0001"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/>
    </inertial>
  </link>
  <gazebo reference="wheel_left_link"  >
    <mu1>1.0</mu1>
    <mu2>1.0</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
  </gazebo>
  <gazebo reference="wheel_right_link">
    <mu1>1.0</mu1>
    <mu2>1.0</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
  </gazebo>
  <gazebo reference="caster_front_link">
    <mu1>0.0</mu1>
    <mu2>0.0</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
  </gazebo>
  <gazebo reference="caster_back_link"  >
    <mu1>0.0</mu1>
    <mu2>0.0</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
  </gazebo>
  <gazebo reference="base_link">
    <mu1>0.3</mu1>
    <mu2>0.3</mu2>
    <sensor name="bumpers" type="contact">
      <always_on>1</always_on>
      <update_rate>50.0</update_rate>
      <visualize>true</visualize>
      <contact>
        <collision>base_footprint_fixed_joint_lump__base_collision</collision>
      </contact>
    </sensor>
  </gazebo>
  <gazebo reference="cliff_sensor_left_link"  >
    <sensor name="cliff_sensor_left" type="ray">
      <always_on>true</always_on>
      <update_rate>50</update_rate>
      <visualize>true</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>50</samples>
            <resolution>1.0</resolution>
            <min_angle>-0.0436</min_angle>
            <!-- -2.5 degree -->
            <max_angle>0.0436</max_angle>
            <!-- 2.5 degree -->
          </horizontal>
          <!--            Can't use vertical rays until this bug is resolved: -->
          <!--            https://bitbucket.org/osrf/gazebo/issue/509/vertical-sensor-doesnt-works -->
          <!-- t          <vertical> -->
          <!-- t            <samples>50</samples> -->
          <!-- t            <resolution>1.0</resolution> -->
          <!-- t            <min_angle>-0.0436</min_angle>  -2.5 degree -->
          <!-- t            <max_angle>0.0436</max_angle> 2.5 degree -->
          <!-- t          </vertical> -->
        </scan>
        <range>
          <min>0.01</min>
          <max>0.15</max>
          <resolution>1.0</resolution>
        </range>
      </ray>
    </sensor>
  </gazebo>
  <gazebo reference="cliff_sensor_right_link"  >
    <sensor name="cliff_sensor_right" type="ray">
      <always_on>true</always_on>
      <update_rate>50</update_rate>
      <visualize>true</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>50</samples>
            <resolution>1.0</resolution>
            <min_angle>-0.0436</min_angle>
            <!-- -2.5 degree -->
            <max_angle>0.0436</max_angle>
            <!-- 2.5 degree -->
          </horizontal>
          <!--            Can't use vertical rays until this bug is resolved: -->
          <!--            https://bitbucket.org/osrf/gazebo/issue/509/vertical-sensor-doesnt-works -->
          <!-- t          <vertical> -->
          <!-- t            <samples>50</samples> -->
          <!-- t            <resolution>1.0</resolution> -->
          <!-- t            <min_angle>-0.0436</min_angle>  -2.5 degree -->
          <!-- t            <max_angle>0.0436</max_angle> 2.5 degree -->
          <!-- t          </vertical> -->
        </scan>
        <range>
          <min>0.01</min>
          <max>0.15</max>
          <resolution>1.0</resolution>
        </range>
      </ray>
    </sensor>
  </gazebo>
  <gazebo reference="cliff_sensor_front_link"
  >
    <sensor name="cliff_sensor_front" type="ray">
      <always_on>true</always_on>
      <update_rate>50</update_rate>
      <visualize>true</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>50</samples>
            <resolution>1.0</resolution>
            <min_angle>-0.0436</min_angle>
            <!-- -2.5 degree -->
            <max_angle>0.0436</max_angle>
            <!-- 2.5 degree -->
          </horizontal>
          <!-- t          Can't use vertical rays until this bug is resolved: -->
          <!--            https://bitbucket.org/osrf/gazebo/issue/509/vertical-sensor-doesnt-works -->
          <!-- t          <vertical> -->
          <!-- t            <samples>50</samples> -->
          <!-- t            <resolution>1.0</resolution> -->
          <!-- t            <min_angle>-0.0436</min_angle>  -2.5 degree -->
          <!-- t            <max_angle>0.0436</max_angle> 2.5 degree -->
          <!-- t          </vertical> -->
        </scan>
        <range>
          <min>0.01</min>
          <max>0.15</max>
          <resolution>1.0</resolution>
        </range>
      </ray>
    </sensor>
  </gazebo>
  <gazebo reference="gyro_link">
    <sensor name="imu" type="imu">
      <always_on>true</always_on>
      <update_rate>50</update_rate>
      <visualize>false</visualize>
      <imu>
        <noise>
          <type>gaussian</type>
          <rate>
            <mean>0.0</mean>
            <stddev>1.96e-06</stddev>
            <!-- 0.25 x 0.25 (deg/s) -->
            <bias_mean>0.0</bias_mean>
            <bias_stddev>0.0</bias_stddev>
          </rate>
          <accel>
            <!-- not used in the plugin and real robot, hence using tutorial values -->
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
            <bias_mean>0.1</bias_mean>
            <bias_stddev>0.001</bias_stddev>
          </accel>
        </noise>
      </imu>
    </sensor>
  </gazebo>
  <gazebo>
    <plugin filename="libgazebo_ros_kobuki.so" name="kobuki_controller">
      <publish_tf>1</publish_tf>
      <left_wheel_joint_name>wheel_left_joint</left_wheel_joint_name>
      <right_wheel_joint_name>wheel_right_joint</right_wheel_joint_name>
      <wheel_separation>.230</wheel_separation>
      <wheel_diameter>0.070</wheel_diameter>
      <torque>1.0</torque>
      <velocity_command_timeout>0.6</velocity_command_timeout>
      <cliff_sensor_left_name>cliff_sensor_left</cliff_sensor_left_name>
      <cliff_sensor_center_name>cliff_sensor_front</cliff_sensor_center_name>
      <cliff_sensor_right_name>cliff_sensor_right</cliff_sensor_right_name>
      <cliff_detection_threshold>0.04</cliff_detection_threshold>
      <bumper_name>bumpers</bumper_name>
      <imu_name>imu</imu_name>
    </plugin>
  </gazebo>
  <!-- LIGHT STRUCTURE -->
  <joint name="structure_joint" type="fixed">
    <parent link="base_link"
  />
    <child link="structure_link"/>
    <origin rpy="0 0 0" xyz="0 0 0"
  />
  </joint>
  <link name="structure_link">
    <visual>
      <geometry>
        <mesh filename="package://uvone_description/meshes/alpha.stl" scale="
  0.0010 0.0010 0.0010"/>
      </geometry>
      <origin rpy="1.570796272 0 1.570796272" xyz="-0.355 -0.235 0.045"/>
      <material name="black">
        <color rgba="0.2 0.2 0.2 1"/>
      </material>
    </visual>
  </link>
  <joint name="front_laser_joint" type="fixed">
    <origin rpy="0 3.1415926536 0" xyz="0.110 0 0.160"/>
    <parent link="base_link"/>
    <child link="
  front_laser_link"/>
  </joint>
  <link name="front_laser_link"/>
  <gazebo reference="rplidar">
    <!-- Gazebo gpu ray -->
    <sensor name="front_laser" type="gpu_ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>5.5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>0.5</resolution>
            <min_angle>-3.151592654</min_angle>
            <max_angle>3.151592654</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.15</min>
          <max>12</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
                achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
                stddev of 0.01m will put 99.7% of samples within 0.03m of the true
                reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_gpu_laser.so">
          <topicName>/scan</topicName>
          <frameName>front_laser_link</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="front_camera_rgb_joint" type="fixed">
    <origin rpy="0 0.40 0" xyz="0.012 0.010 1.320"/>
    <parent link="base_link"/>
    <child link="front_camera_rgb_frame"/>
  </joint>
  <link name="front_camera_rgb_frame"/>
  <joint name="front_camera_rgb_optical_joint" type="fixed">
    <origin rpy="-1.57079632679 0 -1.57079632679" xyz="0 0 0"/>
    <parent link="front_camera_rgb_frame"/>
    <child link="front_camera_rgb_optical_frame"
  />
  </joint>
  <link name="front_camera_rgb_optical_frame"/>
  <joint name="
  front_camera_depth_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 -0.016 0"/>
    <parent link="front_camera_rgb_frame"/>
    <child link="front_camera_depth_frame"
  />
  </joint>
  <link name="front_camera_depth_frame"/>
  <joint name="front_camera_depth_optical_joint" type="fixed">
    <origin rpy="-1.57079632679 0 -1.57079632679" xyz="0 0 0"/>
    <parent link="front_camera_depth_frame"/>
    <child link="front_camera_depth_optical_frame"
  />
  </joint>
  <link name="front_camera_depth_optical_frame"/>
  <!-- RGBD sensor for simulation, same as Kinect -->
  <gazebo reference="front_camera_rgb_frame"
  >
    <sensor name="camera" type="depth">
      <always_on>true</always_on>
      <update_rate>20.0</update_rate>
      <camera>
        <horizontal_fov>1.0471975512</horizontal_fov>
        <image>
          <format>B8G8R8</format>
          <width>640</width>
          <height>480</height>
        </image>
        <clip>
          <near>0.05</near>
          <far>8.0</far>
        </clip>
      </camera>
      <plugin filename="
  libgazebo_ros_openni_kinect.so" name="kinect_camera_controller">
        <cameraName>front_camera</cameraName>
        <alwaysOn>true</alwaysOn>
        <updateRate>30</updateRate>
        <imageTopicName>rgb/image_raw</imageTopicName>
        <depthImageTopicName>depth/image_raw</depthImageTopicName>
        <pointCloudTopicName>depth/points</pointCloudTopicName>
        <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
        <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
        <frameName>front_camera_depth_optical_frame</frameName>
        <baseline>0.1</baseline>
        <distortion_k1>0.0</distortion_k1>
        <distortion_k2>0.0</distortion_k2>
        <distortion_k3>0.0</distortion_k3>
        <distortion_t1>0.0</distortion_t1>
        <distortion_t2>0.0</distortion_t2>
        <pointCloudCutoff>0.4</pointCloudCutoff>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="front_wide_camera_joint" type="fixed">
    <origin rpy="0 1.57079632679 0" xyz="0.012 0.0 1.270"
  />
    <parent link="base_link"/>
    <child link="front_wide_camera_link"
  />
  </joint>
  <link name="front_wide_camera_link"/>
  <joint name="rear_wide_camera_joint" type="fixed">
    <origin rpy="0 1.57079632679 3.1415926536" xyz="-0.012 0.0 1.270"/>
    <parent link="base_link"/>
    <child link="rear_wide_camera_link"
  />
  </joint>
  <link name="rear_wide_camera_link"/>
</robot>
